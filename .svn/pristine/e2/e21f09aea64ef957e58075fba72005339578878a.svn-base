//
//  SelectSeatViewController.swift
//  MockProject1
//
//  Created by Tuan anh Dang on 11/13/16.
//  Copyright © 2016 Kien Nguyen Dang. All rights reserved.
//

import UIKit

class SelectSeatViewController: UIViewController {

    @IBOutlet weak var collectionView: UICollectionView!
    
    var data = [String]()
    var numberTicket:Int = 0
    var numberSeat:Int = 0
    var row:Int = 0
    let numberSeatInCollectionView = 10
    var selectedSeat = [Ghe]()
    
    var seat = [Ghe]()
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Do any additional setup after loading the view.
        
        prepareData()
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func prepareData(){
        collectionView.register(UINib(nibName: "SeatCollectionViewCell", bundle: nil), forCellWithReuseIdentifier: "cell")
        collectionView.delegate = self
        collectionView.dataSource = self
        self.title = "Chọn Ghế"
        
        //kiem tra data
        if data.count > 0 {
            numberTicket = Int(data[0])!
            numberSeat = 100
            //numberSeat = Int(data[1])!
            //DataManager.defaultDataManager().updateDatabase("insert into Ghe(tinhTrang,tenGhe,id_XuatChieu) values (0,'B10',14)")
            seat = DataManager.defaultDataManager().getRowGhe("select * from Ghe where Ghe.id_XuatChieu = " + data[2])
            
        }
        
        
    }
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */
    @IBAction func clickDone(_ sender: Any) {
        
        
    }

}

extension SelectSeatViewController: UICollectionViewDelegate,UICollectionViewDataSource{
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }
    
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        var number = 0
        if numberSeat % (numberSeatInCollectionView - 1) == 0 {
            number = numberSeat / (numberSeatInCollectionView - 1)
        }else{
            number = (numberSeat / (numberSeatInCollectionView - 1) ) + 1
        }
        return number + numberSeat
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        var cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cell", for: indexPath) as? SeatCollectionViewCell
        if cell == nil {
            cell = SeatCollectionViewCell()
        }
        
        if indexPath.item % numberSeatInCollectionView == 0 {
            row =  Int(indexPath.item / numberSeatInCollectionView)
            cell?.lblSeat.text = String(UnicodeScalar(65 + row)!)
            cell?.lblSeat.backgroundColor = UIColor.clear
        }else{
            let number = Int(indexPath.item - ((row) * (numberSeatInCollectionView - 1))) - (1 * row)
            let strNameSeat = String(UnicodeScalar(65 + row)!) + "\(number)"
            cell?.lblSeat.text =  "\(number)"
            let isOrder = seat.contains(where: { (item:Ghe) -> Bool in
                if (item.tenGhe == strNameSeat){
                    return true
                }else{
                    return false
                }
            })
            
            if isOrder == true {
                cell?.lblSeat.backgroundColor = UIColor.red
            }else{
                cell?.lblSeat.backgroundColor = UIColor.gray
            }
            
            
        }
        
        return cell!
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return 8
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        return 8
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let cell = collectionView.cellForItem(at: indexPath) as? SeatCollectionViewCell
        
        if cell != nil {
            if cell?.lblSeat.backgroundColor != UIColor.red && cell?.lblSeat.backgroundColor != UIColor.clear && selectedSeat.count < numberTicket {
                let number = Int(indexPath.item - (Int(indexPath.item / 10) * (numberSeatInCollectionView - 1))) - (1 * Int(indexPath.item / 10))
                let strNameSeat = String(UnicodeScalar(65 + Int(indexPath.item / 10))!) + "\(number)"
                
                if cell?.lblSeat.backgroundColor == UIColor.orange {
                    selectedSeat = selectedSeat.filter(){ $0.tenGhe != strNameSeat ? true : false}
                    cell?.lblSeat.backgroundColor = UIColor.gray
                }else{

                    let selectedGhe = Ghe()
                    selectedGhe.id_XuatChieu = Int(data[2])
                    selectedGhe.tenGhe = strNameSeat
                    selectedGhe.tinhTrang = false
                    selectedSeat.append(selectedGhe)
                    cell?.lblSeat.backgroundColor = UIColor.orange
                }
                
            }
        }
    }

}
extension SelectSeatViewController:UICollectionViewDelegateFlowLayout{
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let size = (self.collectionView.frame.size.width - (8 * (CGFloat(numberSeatInCollectionView) + 1))) / CGFloat(numberSeatInCollectionView)
        return CGSize(width: size, height: size)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout,
                        insetForSectionAt section: Int) -> UIEdgeInsets {
        
        return UIEdgeInsets(top: 8 , left: 8, bottom: 8, right: 8)
    }
}
